#ifndef COMMANDS_H_
#define COMMANDS_H_

// Functions
void commands_init(void);
void commands_process_packet(unsigned char *data, unsigned int len,
		void (*func)(unsigned char *data, unsigned int len));

// Commands
typedef enum {
	// General commands
	CMD_PRINTF = 0,
	CMD_TERMINAL_CMD,

	// Common vehicle commands
	CMD_VESC_FWD = 50,
	CMD_SET_POS,
	CMD_SET_POS_ACK,
	CMD_SET_ENU_REF,
	CMD_GET_ENU_REF,
	CMD_AP_ADD_POINTS,
	CMD_AP_REMOVE_LAST_POINT,
	CMD_AP_CLEAR_POINTS,
	CMD_AP_GET_ROUTE_PART,
	CMD_AP_SET_ACTIVE,
	CMD_AP_REPLACE_ROUTE,
	CMD_AP_SYNC_POINT,
	CMD_SEND_RTCM_USB,
	CMD_SEND_NMEA_RADIO,
	CMD_SET_YAW_OFFSET,
	CMD_SET_YAW_OFFSET_ACK,
	CMD_LOG_LINE_USB,
	CMD_PLOT_INIT,
	CMD_PLOT_DATA,
	CMD_PLOT_ADD_GRAPH,
	CMD_PLOT_SET_GRAPH,
	CMD_SET_MS_TODAY,
	CMD_SET_SYSTEM_TIME,
	CMD_SET_SYSTEM_TIME_ACK,
	CMD_REBOOT_SYSTEM,
	CMD_REBOOT_SYSTEM_ACK,
	CMD_EMERGENCY_STOP,
	CMD_SET_MAIN_CONFIG,
	CMD_GET_MAIN_CONFIG,
	CMD_GET_MAIN_CONFIG_DEFAULT,
	CMD_ADD_UWB_ANCHOR,
	CMD_CLEAR_UWB_ANCHORS,
	CMD_LOG_ETHERNET,
	CMD_CAMERA_IMAGE,
	CMD_CAMERA_STREAM_START,
	CMD_CAMERA_FRAME_ACK,
	CMD_IO_BOARD_SET_PWM_DUTY,
	CMD_IO_BOARD_SET_VALVE,
	CMD_HYDRAULIC_MOVE,

	// Car commands
	CMD_GET_STATE = 120,
	CMD_RC_CONTROL,
	CMD_SET_SERVO_DIRECT,

	// Multirotor commands
	CMD_MR_GET_STATE = 160,
	CMD_MR_RC_CONTROL,
	CMD_MR_OVERRIDE_POWER,

	// Mote commands
	CMD_MOTE_UBX_START_BASE = 200,
	CMD_MOTE_UBX_START_BASE_ACK,
	CMD_MOTE_UBX_BASE_STATUS
} CMD_PACKET;

#endif /* COMMANDS_H_ */
